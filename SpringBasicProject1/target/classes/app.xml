<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 
		DI, AOP, JDBC, ORM => 컨테이너
			BeanFactory : CORE (DI,DL(찾기)) 
				 |
		 ApplicationContext : DI, DL, AOP 
		 		 |
      ===========================================================================
	  |						     |												|
 WepApplicationContext    AnnotationConfigApplicationContext           GenericXmlApplicationContext
   DI, DL, AOP, MVC          DI, DL, AOP, 자바만 사용(XML X)               DI, DL, AOP, 자바만 사용(XML O)
   
   컨테이너 => 메모리 할당, 메모리 회수, DI, DL
   
   ApplicationContext
   	   1. XML 파싱
	   2. 클래스 메모리 할당
	   3. setter에 값을 채운다 
	   4. 필요한 메소드 호출 가능 => init-method, destroy-method
	======================================================= 기본 셋팅
	   5. 프로그래머가 필요한 메소드를 호출
	=======================================================
	   6. 메모리 해제
	 -->
	 <bean id="dao" class="com.sist.spring.EmpDAO" init-method="init">
	 	<property name="driverName" value="oracle.jdbc.driver.OracleDriver"/>
	 	<property name="url" value="jdbc:oracle:thin:@localhost:1521:XE"/>
	 	<property name="userName" value="hr"/>
	 	<property name="password" value="happy"/>
	 </bean>
	 <!-- 
	 	EmpDAO dao=new EmpDAO();
	 	dao.setDriverName("oracle.jdbc.driver.OracleDriver"); => DI
	 	dao.setUrl("jdbc:oracle:thin:@localhost:1521:XE");
	 	dao.setUserName("hr");
	 	dao.setPassword("happy");
	 	
	 	=> ApplicationContext에 등록
	 	 Map
	 	==================
	 	 dao new EmpDAO()
	 	==================
	 	 mc new MainClass()
	 	==================
	  -->
	  
	  <bean id="mc" class="com.sist.spring.MainClass" p:dao-ref="dao"/>
	  <bean id="mc2" class="com.sist.spring.MainClass2"/>
</beans>
